// Interface with readonly modifiers should not produce violations
interface Foo {
  readonly a: number,
  readonly b: Array<string>,
  readonly c: () => string,
  readonly [key: string]: string
}

// PropertySignature and IndexSignature members without readonly modifier should produce violations
interface Foo {
  a: number,
  ~~~~~~~~~~ [failure]
  b: Array<string>,
  ~~~~~~~~~~~~~~~~~ [failure]
  c: () => string,
  ~~~~~~~~~~~~~~~~[failure]
  [key: string]: string,
  ~~~~~~~~~~~~~~~~~~~~~~ [failure]
}

// CallSignature and MethodSignature cannot have readonly modifiers and should not produce violations
export interface Zoo {
  (): void
  foo(): void
}

// Indexer type declaration should not produce violations
let foo: {readonly [key: string]: number};

[failure]: Interface members must have readonly modifier.
