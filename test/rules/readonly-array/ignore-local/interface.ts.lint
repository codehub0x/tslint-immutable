// -- Top-level interface declarations

// Should fail on Array type in interface (TypeReferenceNode)
interface Foo {
  bar: Array<string>
       ~~~~~~~~~~~~~ [failure]
}

// -- Local interface declarations

function foo(): Array<string> {
                ~~~~~~~~~~~~~ [failure]

  // Should not fail on Array type in interface when local (TypeReferenceNode)
  interface Foo {
    bar: Array<string>
  }

}

const foo = (): Array<string> => {
                ~~~~~~~~~~~~~ [failure]

  // Should not fail on Array type in interface when local (TypeReferenceNode)
  interface Foo {
    bar: Array<string>
  }

}

function foo(): ReadonlyArray<number> {

  // Should not fail on explicit ReadonlyArray return type
  return [1, 2, 3];

}

const foo = (): ReadonlyArray<number> => {

  // Should not fail on explicit ReadonlyArray return type
  return [1, 2, 3];

}

[failure]: Only ReadonlyArray allowed.
